{"version":3,"sources":["App.js","index.js"],"names":["accessKey","App","useState","images","setImages","page","setPage","query","setQuery","getPhotos","apiUrl","fetch","then","res","json","data","imagesFromApi","results","useEffect","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","dataLength","length","next","hasMore","loader","map","image","index","key","href","links","html","rel","src","urls","regular","alt","alt_description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAOMA,G,MAAY,+CAEH,SAASC,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAOA,SAASC,IACP,IAAIC,EAAM,mCACNH,IAAOG,EAAM,uDAAmDH,IACpEG,GAAM,gBAAaL,GACnBK,GAAM,qBAAkBV,GAExBW,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAU,IAAD,EACRC,EAAa,UAAGD,EAAKE,eAAR,QAAmBF,EAStCX,EANa,IAATC,EAMM,SAACF,GAAD,4BAAgBA,GAAhB,YAA2Ba,KALzBA,MAwBlB,OA1CAE,qBAAU,WACRT,MAEC,CAACJ,IAwCF,yBAAKc,UAAU,OACb,+CAEA,0BAAMC,SAnBV,SAAsBC,GACpBA,EAAEC,iBACFhB,EAAQ,GACRG,MAiBI,2BACEc,KAAK,OACLC,YAAY,4BACZC,MAAOlB,EACPmB,SAAU,SAACL,GAAD,OAAOb,EAASa,EAAEM,OAAOF,UAErC,2CAGF,kBAAC,IAAD,CACEG,WAAYzB,EAAO0B,OACnBC,KAAM,kBAAMxB,GAAQ,SAACD,GAAD,OAAUA,EAAO,MACrC0B,SAAS,EACTC,OAAQ,2CAER,yBAAKb,UAAU,cACZhB,EAAO8B,KAAI,SAACC,EAAOC,GAAR,OACV,uBACEhB,UAAU,QACViB,IAAKD,EACLE,KAAMH,EAAMI,MAAMC,KAClBZ,OAAO,SACPa,IAAI,uBAEJ,yBAAKC,IAAKP,EAAMQ,KAAKC,QAASC,IAAKV,EAAMW,yBCjFvDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5e6319b9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\n\n// NOTE: make sure to add your unsplash api key\n// https://unsplash.com/developers\n// copy .env.example to .env\nconst accessKey = \"HVpkjUmCfKAx9-QATiMdcnXNwIioBsFM26EH89z4klw\";\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    getPhotos();\n    // eslint-disable-next-line\n  }, [page]);\n\n  function getPhotos() {\n    let apiUrl = `https://api.unsplash.com/photos?`;\n    if (query) apiUrl = `https://api.unsplash.com/search/photos?query=${query}`;\n    apiUrl += `&page=${page}`;\n    apiUrl += `&client_id=${accessKey}`;\n\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        const imagesFromApi = data.results ?? data;\n\n        // if page is 1, then we need a whole new array of images\n        if (page === 1) {\n          setImages(imagesFromApi);\n          return;\n        }\n\n        // if page > 1, then we are adding for our infinite scroll\n        setImages((images) => [...images, ...imagesFromApi]);\n      });\n  }\n\n  function searchPhotos(e) {\n    e.preventDefault();\n    setPage(1);\n    getPhotos();\n  }\n\n  // return an error if there is no access key\n  if (!accessKey) {\n    return (\n      <a href=\"https://unsplash.com/developers\" className=\"error\">\n        Required: Get Your API Key First\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Infinix Gallery</h1>\n\n      <form onSubmit={searchPhotos}>\n        <input\n          type=\"text\"\n          placeholder=\"Search Infinix Gallery...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button>Search</button>\n      </form>\n\n      <InfiniteScroll\n        dataLength={images.length}\n        next={() => setPage((page) => page + 1)}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n      >\n        <div className=\"image-grid\">\n          {images.map((image, index) => (\n            <a\n              className=\"image\"\n              key={index}\n              href={image.links.html}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={image.urls.regular} alt={image.alt_description} />\n            </a>\n          ))}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}